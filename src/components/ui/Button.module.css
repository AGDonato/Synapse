/* Button.module.css */

/* Base button styles */
.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  font-weight: var(--font-weight-medium);
  border-radius: var(--radius-md);
  transition: all 200ms ease;
  cursor: pointer;
  border: none;
  outline: none;
  position: relative;
  white-space: nowrap;
  user-select: none;
}

.button:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
  box-shadow:
    0 0 0 2px var(--bg-primary),
    0 0 0 4px var(--border-focus);
}

.button:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

/* Size variants */
.sm {
  font-size: var(--font-size-sm);
  padding: var(--space-1) var(--space-3);
  min-height: 32px;
}

.md {
  font-size: var(--font-size-sm);
  padding: 0.75rem 1rem;
  min-height: 36px;
}

.lg {
  font-size: var(--font-size-base);
  padding: var(--space-3) var(--space-6);
  min-height: 44px;
}

/* Full width */
.fullWidth {
  width: 100%;
}

/* Variant styles */
.primary {
  background-color: var(--interactive-primary);
  color: var(--text-on-brand);
}

.primary:hover:not(:disabled) {
  background-color: var(--interactive-primary-hover);
  transform: translateY(-1px);
}

.primary:active:not(:disabled) {
  background-color: var(--interactive-primary-active);
  transform: translateY(0);
}

.secondary {
  background-color: var(--bg-secondary);
  color: var(--text-primary);
  border: 1px solid var(--border-primary);
}

.secondary:hover:not(:disabled) {
  background-color: var(--bg-tertiary);
  border-color: var(--border-secondary);
}

.secondary:active:not(:disabled) {
  background-color: var(--bg-quaternary);
}

.outline {
  background-color: transparent;
  color: var(--text-primary);
  border: 1px solid var(--border-primary);
}

.outline:hover:not(:disabled) {
  background-color: var(--bg-secondary);
  border-color: var(--border-secondary);
}

.outline:active:not(:disabled) {
  background-color: var(--bg-tertiary);
}

.ghost {
  background-color: transparent;
  color: var(--text-primary);
}

.ghost:hover:not(:disabled) {
  background-color: var(--bg-secondary);
}

.ghost:active:not(:disabled) {
  background-color: var(--bg-tertiary);
}

.success {
  background-color: var(--color-success);
  color: var(--text-inverse);
}

.success:hover:not(:disabled) {
  background-color: var(--color-success-dark);
}

.success:active:not(:disabled) {
  background-color: var(--color-success-darker);
}

.warning {
  background-color: var(--color-warning);
  color: var(--text-primary);
}

.warning:hover:not(:disabled) {
  background-color: var(--color-warning-dark);
}

.warning:active:not(:disabled) {
  background-color: var(--color-warning-darker);
}

.error {
  background-color: var(--color-error);
  color: var(--text-inverse);
}

.error:hover:not(:disabled) {
  background-color: var(--color-error-dark);
}

.error:active:not(:disabled) {
  background-color: var(--color-error-darker);
}

.danger {
  background-color: #dc3545;
  color: white;
  border: 1px solid #dc3545;
}

.danger:hover:not(:disabled) {
  background-color: #c82333;
  border-color: #bd2130;
}

.danger:active:not(:disabled) {
  background-color: #bd2130;
  border-color: #b21f2d;
}

/* Loading spinner */
.spinner {
  width: 16px;
  height: 16px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Add fallback colors for variants that might not have all shades defined */
.success:hover:not(:disabled) {
  filter: brightness(0.9);
}

.success:active:not(:disabled) {
  filter: brightness(0.8);
}

.warning:hover:not(:disabled) {
  filter: brightness(0.9);
}

.warning:active:not(:disabled) {
  filter: brightness(0.8);
}

.error:hover:not(:disabled) {
  filter: brightness(0.9);
}

.error:active:not(:disabled) {
  filter: brightness(0.8);
}
