/* DemandasPage.module.css */

.pageHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

.filterContainer {
  background-color: #f8f9fa;
  padding: 1.5rem;
  border-radius: 8px;
  border: 1px solid #dee2e6;
  margin-bottom: 1.5rem;
}

.filterTitle {
  margin-top: 0;
  margin-bottom: 1rem;
}

.filterGrid {
  display: grid;
  gap: 1rem;
}

/* Primeira linha: 4 + 4 + 4 + 3 + 2 = 17 partes */
.filterRow1 {
  display: grid;
  grid-template-columns: 4fr 4fr 4fr 3fr 2fr;
  gap: 1rem;
  margin-bottom: 1rem;
}

/* Segunda linha: 5 + 5 + 3.5 + 3.5 = 17 partes */
.filterRow2 {
  display: grid;
  grid-template-columns: 5fr 5fr 3.5fr 3.5fr;
  gap: 1rem;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.formGroup label {
  font-weight: 500;
  color: #495057;
  font-size: 0.75rem; /* Diminuído de 0.875rem para 0.75rem */
}

.formLabel {
  font-weight: 500;
  color: #495057;
  font-size: 0.875rem;
}

.formInput {
  padding: 8px;
  border-radius: 4px;
  border: 1px solid #ccc;
  width: 100%;
  box-sizing: border-box;
  font-size: 0.875rem;
  transition: border-color 0.2s ease;
  height: 36px; /* Altura fixa para normalizar inputs e selects */
  line-height: 1.2;
}

.formInput:focus {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
}

.formSelect {
  composes: formInput;
  cursor: pointer;
}

.table {
  width: 100%;
  border-collapse: collapse;
  background-color: white;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.tableHeader {
  background-color: #f8f9fa;
  padding: 12px 15px;
  border-top: none;
  border-bottom: 1px solid #dee2e6;
  border-left: none;
  border-right: none;
  text-align: left;
  font-weight: 600;
  font-size: 0.875rem;
  color: #495057;
}

.tableCell {
  padding: 12px 15px;
  border-bottom: 1px solid #dee2e6;
  font-size: 0.875rem;
  color: #212529;
}

.tableRow {
  transition: background-color 0.2s ease;
}

.tableRow:hover {
  background-color: #f8f9fa;
  cursor: pointer;
}

.pagination {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 1rem;
  padding: 1rem 0;
}

.paginationInfo {
  font-size: 0.875rem;
  color: #6c757d;
}

.paginationControls {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.pageButton {
  padding: 0.375rem 0.75rem;
  border: 1px solid #dee2e6;
  background-color: white;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.875rem;
  transition: all 0.2s ease;
}

.pageButton:hover {
  background-color: #f8f9fa;
  border-color: #adb5bd;
}

.pageButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.pageButton:disabled:hover {
  background-color: white;
  border-color: #dee2e6;
}

.activePageButton {
  composes: pageButton;
  background-color: #007bff;
  border-color: #007bff;
  color: white;
}

.activePageButton:hover {
  background-color: #0056b3;
  border-color: #0056b3;
}

.filterActions {
  display: flex;
  justify-content: flex-end;
  margin-top: 1rem;
}

.clearButton {
  padding: 0.5rem 1rem;
  background-color: #6c757d;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.875rem;
  transition: background-color 0.2s ease;
}

.clearButton:hover {
  background-color: #545b62;
}

.noResults {
  text-align: center;
  padding: 2rem;
  color: #6c757d;
  font-style: italic;
}

/* DatePicker customization */
:global(.react-datepicker-wrapper) {
  width: 100%;
  position: relative;
}

:global(.react-datepicker__input-container) {
  width: 100%;
  position: relative;
}

:global(.react-datepicker__input-container) {
  position: relative;
}

:global(.react-datepicker__input-container input) {
  padding: 8px 35px 8px 8px; /* Espaço à direita para o ícone */
  border-radius: 4px;
  border: 1px solid #ccc;
  width: 100%;
  box-sizing: border-box;
  font-size: 0.875rem;
  transition: border-color 0.2s ease;
  height: 36px; /* Mesma altura dos outros campos */
  line-height: 1.2;
}

/* Ícone antigo removido - usando wrapper personalizado */

/* Wrapper personalizado para controlar o ícone */
.datePickerWrapper {
  position: relative;
}

.datePickerWrapper::after {
  content: '📅';
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  font-size: 14px;
  color: #9ca3af;
  opacity: 0.7;
  z-index: 1;
}

/* Esconder ícone quando há valor */
.datePickerWrapper.hasValue::after {
  display: none;
}

/* Garantir que o input seja clicável e não editável manualmente */
:global(.react-datepicker__input-container input) {
  cursor: pointer;
  background-color: white;
}

:global(.react-datepicker__input-container input:focus) {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
}

/* Fixar posição do calendário para evitar deslocamento do layout */
:global(.react-datepicker) {
  z-index: 1000;
  position: absolute !important;
  transform: translateY(0) !important;
}

:global(.react-datepicker-popper) {
  z-index: 1000;
  position: absolute !important;
}

:global(.react-datepicker-popper[data-placement^='bottom']) {
  padding-top: 15px !important;
  margin-top: 15px !important;
}

/* Correção para calendários que ficam cortados na direita */
:global(.react-datepicker-popper[data-placement='bottom-end']) {
  transform: translate3d(-50%, 15px, 0) !important;
}

/* Forçar calendário a sempre abrir para baixo e centralizado quando possível */
:global(.react-datepicker-popper[data-placement*='top']) {
  transform: translate3d(0, 20px, 0) !important;
}

/* Espaçamento geral para todos os calendários */
:global(.react-datepicker-popper) {
  margin-top: 15px !important;
}

/* Remover a setinha (arrow) do calendário */
:global(.react-datepicker__triangle) {
  display: none !important;
}

/* Ajuste específico para campos de data no final da linha */
.filterRow2 .formGroup:nth-child(3) :global(.react-datepicker-popper),
.filterRow2 .formGroup:nth-child(4) :global(.react-datepicker-popper) {
  transform: translate3d(-30%, 15px, 0) !important;
}

/* Garantir que o container não mude de altura */
.formGroup {
  min-height: 80px; /* Altura aumentada para evitar movimento do DatePicker */
  position: relative;
}

/* Centralizar texto */
.textCenter {
  text-align: center;
}

/* Multi-select components */
.multiSelectContainer {
  position: relative;
  width: 100%;
}

.multiSelectTrigger {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px;
  border-radius: 4px;
  border: 1px solid #ccc;
  background-color: white;
  cursor: pointer;
  font-size: 0.875rem;
  transition: border-color 0.2s ease;
  height: 36px;
  box-sizing: border-box;
}

.multiSelectTrigger:hover {
  border-color: #007bff;
}

.multiSelectTrigger:focus {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
}

.dropdownArrow {
  font-size: 12px;
  color: #666;
  transition: transform 0.2s ease;
}

.multiSelectDropdown {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: white;
  border: 1px solid #ccc;
  border-top: none;
  border-radius: 0 0 4px 4px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  max-height: 200px;
  overflow-y: auto;
}

/* Container de busca dentro do dropdown */
.searchContainer {
  padding: 8px;
  border-bottom: 1px solid #e2e8f0;
  background: #f8f9fa;
}

.searchInput {
  width: 100%;
  padding: 6px 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 0.875rem;
  box-sizing: border-box;
}

.searchInput:focus {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
}

/* Container das opções com scroll */
.optionsContainer {
  max-height: 150px;
  overflow-y: auto;
}

.checkboxLabel {
  display: flex;
  align-items: center;
  padding: 8px 12px;
  cursor: pointer;
  transition: background-color 0.2s ease;
  font-size: 0.875rem;
  margin: 0;
}

.checkboxLabel:hover {
  background-color: #f8f9fa;
}

.checkbox {
  margin: 0;
  margin-right: 8px;
  width: 16px;
  height: 16px;
  cursor: pointer;
  accent-color: #007bff;
}

.checkboxText {
  flex: 1;
  user-select: none;
}

/* Paginação padronizada */
.paginationControls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 1rem;
  padding-top: 1rem;
  border-top: 1px solid #e5e7eb;
}

.itemsPerPageSelector {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  color: #6b7280;
}

.itemsPerPageSelector select {
  padding: 0.375rem 0.75rem;
  border: 1px solid #d1d5db;
  border-radius: 4px;
  font-size: 0.875rem;
}

.pageNavigation {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.pageNavigation button {
  padding: 0.5rem 1rem;
  border: 1px solid #d1d5db;
  background: white;
  color: #374151;
  border-radius: 4px;
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.pageNavigation button:hover:not(:disabled) {
  background: #f9fafb;
  border-color: #9ca3af;
}

.pageNavigation button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.pageInfo {
  font-size: 0.875rem;
  color: #6b7280;
}

/* Botão primário padronizado */
.btnPrimary {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background: #007bff;
  border: none;
  color: white;
  padding: 0.75rem 1rem;
  border-radius: 6px;
  font-weight: 500;
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
}

.btnPrimary:hover {
  background: #0056b3;
  transform: translateY(-1px);
  color: white;
  text-decoration: none;
}

/* Cabeçalhos ordenáveis */
.sortableHeader {
  cursor: pointer;
  user-select: none;
  transition: background-color 0.2s ease;
}

.sortableHeader:hover {
  background-color: #f3f4f6;
}
