name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # Job 1: Análise de Código e Build
  build-and-test:
    name: 'Build & Test'
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Type checking
        run: npm run type-check
        continue-on-error: false

      - name: 🎨 ESLint
        run: npm run lint
        continue-on-error: false

      - name: 💅 Prettier check
        run: npm run format:check
        continue-on-error: false

      - name: 🏗️ Build application
        run: npm run build

      - name: ✅ Check build outputs
        run: |
          echo "🔍 Checking build outputs..."
          if [ -d "dist" ]; then
            echo "✅ Build successful - dist folder created"
            ls -la dist/
            echo "📊 Build size:"
            du -sh dist/
          else
            echo "❌ Build failed - no dist folder found"
            exit 1
          fi

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: dist/
          retention-days: 7

  # Job 2: Testes (apenas se existirem)
  test:
    name: 'Run Tests'
    runs-on: ubuntu-latest
    needs: build-and-test
    if: success()
    continue-on-error: true
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm run test:run || echo "No tests found or tests failed"
        continue-on-error: true

      - name: 📊 Generate coverage report
        run: npm run test:coverage || echo "Coverage generation skipped"
        continue-on-error: true

  # Job 3: Security Scan
  security:
    name: 'Security Scan'
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 5

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔒 Security audit
        run: |
          echo "🔍 Running security audit..."
          npm audit --audit-level=moderate || echo "⚠️ Some vulnerabilities found"
        continue-on-error: true

  # Job 4: Success notification
  success-notification:
    name: '✅ Pipeline Success'
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: success()
    
    steps:
      - name: 🎉 Success notification
        run: |
          echo "✅ Pipeline successful for ${{ github.ref_name }} branch"
          echo "🚀 Build completed successfully"
          echo "📊 Commit: ${{ github.sha }}"
          echo "👤 Author: ${{ github.actor }}"
          echo "🕐 Time: $(date)"

# Configurações para evitar builds paralelos desnecessários
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true